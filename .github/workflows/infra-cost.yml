name: Project Resource Cost Scan

on:
  pull_request:
    types: [opened, synchronize, closed]
  push:
    branches:
      - main
      - master


env:
  GIT_SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
#   OIDC_ROLE: ${{ secrets.OIDC_ROLE }}

jobs:
  infracost-pull-request-checks:
    name: Infracost Pull Request Checks
    if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'synchronize')
    runs-on: ubuntu-latest
    permissions:
        contents: read
        pull-requests: write

    steps:
      - name: Send Slack Message - Generating Report
        env:
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"Generating Cost Report for Infra Change Request Report by $COMMITTER_NAME\"}" ${{ secrets.SLACK_WEBHOOK}}

      - name: Setup Infracost
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

    # Checkout the base branch of the pull request (e.g. main/master).
      - name: Checkout code
        uses: actions/checkout@v3
        with:
            ref: '${{ github.event.pull_request.base.ref }}'

      # Generate Infracost table file as the baseline.
      - name: Generate Infracost cost estimate baseline
        run: |
          infracost breakdown --path=. \
                              --format=table \
                              --out-file=infracost-base.txt

      # Checkout the current PR branch so we can create a diff.
      - name: Checkout PR branch
        uses: actions/checkout@v4

      # Generate an Infracost diff and save it to a JSON file.
      - name: Generate Infracost diff
        run: |
          infracost diff --path=. \
                          --format=json \
                          --compare-to=/tmp/infracost-base.txt \
                          --out-file=/tmp/infracost.txt


      - name: Post Infracost comment
        run: |
            infracost comment github --path=infracost.txt \
                                     --repo=$GITHUB_REPOSITORY \
                                     --github-token=${{ github.token }} \
                                     --pull-request=${{ github.event.pull_request.number }} \
                                     --behavior=update

      - name: Slack Notification
        run: |
          pip3 install slack_sdk
          echo "TIMESTAMP=$(date +%Y%m%d)" >> $GITHUB_ENV
          python3 ${{ github.workspace }}/slackmessenger.py

  infracost-default-branch-update:
    # If you use private modules, or store Terraform variables or modules in a 3rd party
    # such as TFC or Spacelift, include the same steps/variables as the infracost-pull-request-checks job
    name: Infracost Default Branch Update
    if: github.event_name == 'push' && (github.ref_name == 'main' || github.ref_name == 'master')
    runs-on: ubuntu-latest
    steps:
      - name: Setup Infracost
        uses: infracost/actions/setup@v3
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: Checkout main/master branch
        uses: actions/checkout@v4

      - name: Run Infracost on default branch and update Infracost Cloud
        run: |
          infracost breakdown --path=. \
                    --format=table \
                    --out-file=infracost.txt

          infracost upload --path=infracost.txt || echo "Always pass main branch runs even if there are policy failures"